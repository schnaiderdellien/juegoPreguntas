import streamlit as st
import random
import pandas as pd
import altair as alt

# ConfiguraciÃ³n de la pÃ¡gina
st.set_page_config(page_title="Juego de Preguntas", page_icon="ğŸ“±", layout="wide")

# Diccionarios de preguntas y retos
PREGUNTAS = {
"nivel1": [
        "Â¿CuÃ¡l es tu color favorito?",
        "Â¿CuÃ¡l es tu comida favorita?",
        "Â¿Tienes una mascota?",
        "Â¿QuÃ© superpoder te gustarÃ­a tener?",
        "Â¿CuÃ¡l es tu animal favorito?",
        "Â¿Prefieres el verano o el invierno?",
        "Â¿QuÃ© pelÃ­cula has visto mÃ¡s veces?",
        "Â¿CuÃ¡l es tu deporte favorito?",
        "Â¿QuÃ© harÃ­as con un millÃ³n de dÃ³lares?",
        "Â¿QuÃ© lugar del mundo te gustarÃ­a visitar?",
        "Â¿CuÃ¡l es tu serie de televisiÃ³n favorita?",
        "Â¿QuÃ© instrumento musical te gustarÃ­a tocar?",
        "Â¿Te gusta mÃ¡s la playa o la montaÃ±a?",
        "Â¿CuÃ¡l es tu helado favorito?",
        "Â¿CuÃ¡l es tu juego de mesa preferido?",
        "Â¿QuÃ© harÃ­as si fueras invisible por un dÃ­a?",
        "Â¿CuÃ¡l es tu canciÃ³n favorita?",
        "Â¿Te gusta mÃ¡s leer o ver pelÃ­culas?",
        "Â¿Prefieres perros o gatos?",
        "Â¿QuÃ© libro recomendarÃ­as a un amigo?"
    ],
    "nivel2": [
        "Â¿QuÃ© tres cosas te llevarÃ­as a una isla desierta?",
        "Â¿QuÃ© harÃ­as si pudieras viajar en el tiempo?",
        "Â¿CÃ³mo describirÃ­as un dÃ­a perfecto?",
        "Â¿CuÃ¡l es el mayor logro de tu vida?",
        "Â¿QuÃ© tipo de vacaciones te gustan mÃ¡s?",
        "Si fueras presidente, Â¿quÃ© serÃ­a lo primero que harÃ­as?",
        "Â¿QuÃ© es algo que siempre has querido aprender?",
        "Â¿QuÃ© harÃ­as si te encontraras con tu Ã­dolo?",
        "Â¿CuÃ¡l es tu recuerdo favorito de la infancia?",
        "Â¿QuÃ© cambiarÃ­as de tu rutina diaria?",
        "Â¿CuÃ¡l es el mejor consejo que te han dado?",
        "Â¿QuÃ© harÃ­as si ganaras la loterÃ­a?",
        "Â¿QuÃ© es algo que te hace feliz instantÃ¡neamente?",
        "Â¿CÃ³mo serÃ­a tu casa soÃ±ada?",
        "Â¿QuÃ© pelÃ­cula te ha hecho llorar mÃ¡s?",
        "Â¿QuÃ© talento secreto tienes?",
        "Â¿QuÃ© harÃ­as si fueras famoso por un dÃ­a?",
        "Â¿QuÃ© tres palabras te describen mejor?",
        "Â¿CuÃ¡l es el mejor regalo que has recibido?",
        "Â¿QuÃ© habilidad te gustarÃ­a mejorar?"
    ],
    "nivel3": [
        "Â¿CuÃ¡l ha sido la decisiÃ³n mÃ¡s difÃ­cil que has tomado?",
        "Â¿CÃ³mo te gustarÃ­a ser recordado?",
        "Â¿QuÃ© harÃ­as si solo te quedara un dÃ­a de vida?",
        "Â¿CuÃ¡l ha sido el mayor desafÃ­o que has enfrentado?",
        "Â¿QuÃ© es algo que lamentas no haber hecho?",
        "Si pudieras cambiar algo de tu pasado, Â¿quÃ© serÃ­a?",
        "Â¿QuÃ© es lo mÃ¡s valioso que posees?",
        "Â¿QuÃ© persona ha tenido el mayor impacto en tu vida?",
        "Â¿CuÃ¡l es tu mayor miedo y por quÃ©?",
        "Â¿QuÃ© te motiva a seguir adelante en momentos difÃ­ciles?",
        "Â¿QuÃ© significa el Ã©xito para ti?",
        "Â¿QuÃ© opinas sobre la importancia del dinero en la vida?",
        "Â¿CÃ³mo definirÃ­as la felicidad?",
        "Â¿QuÃ© valores consideras mÃ¡s importantes en una persona?",
        "Â¿CuÃ¡l ha sido tu mayor lecciÃ³n de vida hasta ahora?",
        "Â¿QuÃ© es lo mÃ¡s arriesgado que has hecho?",
        "Â¿QuÃ© te hace sentir mÃ¡s orgulloso de ti mismo?",
        "Â¿QuÃ© importancia le das a la familia en tu vida?",
        "Â¿QuÃ© es algo que harÃ­as diferente si tuvieras otra oportunidad?",
        "Â¿QuÃ© sueÃ±os o metas tienes aÃºn por cumplir?"
    ]
}
RETOS = {
"nivel1": [
        "Canta una canciÃ³n frente a todos.",
        "Haz 10 saltos de tijera.",
        "Imita a un animal durante 30 segundos.",
        "Baila como si no te estuviera viendo nadie.",
        "Cuenta un chiste gracioso.",
        "Haz 5 flexiones.",
        "Imita a una celebridad famosa.",
        "Haz una mueca durante 30 segundos.",
        "Haz una declaraciÃ³n de amor a un objeto inanimado.",
        "Imita a un personaje de dibujos animados.",
        "Recita el abecedario al revÃ©s.",
        "Haz una llamada telefÃ³nica fingiendo que eres alguien mÃ¡s.",
        "Baila durante 1 minuto sin parar.",
        "Imita un objeto en el que todo el mundo lo pueda reconocer.",
        "Canta la canciÃ³n de una pelÃ­cula Disney.",
        "Haz una historia inventada usando solo 3 palabras.",
        "Haz 10 abdominales.",
        "ActÃºa como si fueras un superhÃ©roe durante 1 minuto.",
        "Di un trabalenguas muy rÃ¡pido.",
        "Haz un tutorial inventado sobre algo."
    ],
    "nivel2": [
        "Haz una entrevista a alguien sobre su dÃ­a como si fueras un reportero.",
        "Haz un reto de 30 segundos de hacer mÃ­mica con un tema elegido al azar.",
        "Escribe un poema en 1 minuto.",
        "Realiza una actividad deportiva durante 2 minutos.",
        "Imita a tu cantante favorito durante 1 minuto.",
        "Haz 5 piruetas sin caerte.",
        "Recita 5 trabalenguas difÃ­ciles de manera fluida.",
        "Toma un selfie en una pose creativa.",
        "Haz una escena dramÃ¡tica de una pelÃ­cula famosa.",
        "Imita a tus padres durante 1 minuto.",
        "Haz una llamada telefÃ³nica fingiendo ser alguien famoso.",
        "Haz una competencia de risas con alguien.",
        "Escribe una carta a tu futuro yo.",
        "Recita un discurso sobre la importancia de la amistad.",
        "Haz 20 saltos en el lugar.",
        "Haz 10 sentadillas.",
        "ActÃºa como si fueras un personaje histÃ³rico durante 2 minutos.",
        "Haz una rutina de baile inventada con mÃºsica.",
        "Imita el sonido de una tormenta.",
        "Haz 20 abdominales mientras cantas una canciÃ³n."
    ],
    "nivel3": [
        "Imagina que eres un lÃ­der mundial y da un discurso importante.",
        "Escribe un discurso sobre la paz mundial.",
        "Haz una crÃ­tica de una pelÃ­cula como si fueras un experto.",
        "ActÃºa como un personaje famoso en una escena de acciÃ³n.",
        "Haz una imitaciÃ³n de un polÃ­tico famoso.",
        "Escribe y recita una carta a tu yo mÃ¡s joven.",
        "Haz un resumen de tu vida en 1 minuto.",
        "Imagina que eres un maestro y explica un tema complejo.",
        "Imita a tu actor favorito en una escena dramÃ¡tica.",
        "Haz una canciÃ³n improvisada sobre un tema aleatorio.",
        "Haz una escena de una pelÃ­cula de terror.",
        "Imagina que estÃ¡s en una entrevista de trabajo y responde preguntas difÃ­ciles.",
        "Haz un reto de improvisaciÃ³n con un tema que te den.",
        "Haz una presentaciÃ³n sobre el futuro de la tecnologÃ­a.",
        "Imita a un animal extinto como si lo hubieras visto en persona.",
        "Explica de manera divertida y creativa cÃ³mo hacer algo complicado.",
        "Crea una historia improvisada sobre un hÃ©roe que salva al mundo.",
        "Haz una presentaciÃ³n como si fueras un experto en ciencia.",
        "ActÃºa como si fueras un astronauta en el espacio.",
        "Escribe y recita un monÃ³logo profundo sobre la vida."
    ]
}
# InicializaciÃ³n del juego
def inicializacion_juego():
    """Inicializar las variables de sesiÃ³n"""
    if 'jugadores' not in st.session_state:
        st.session_state.jugadores = []
    if 'jugadores_actuales' not in st.session_state:
        st.session_state.jugadores_actuales = 0
    if 'juego_activo' not in st.session_state:
        st.session_state.juego_activo = False
    if 'categoria' not in st.session_state:
        st.session_state.categoria = None
    if 'jugador_actual' not in st.session_state:
        st.session_state.jugador_actual = None
    if 'pregunta_seleccionada' not in st.session_state:
        st.session_state.pregunta_seleccionada = None
    if 'reto_seleccionado' not in st.session_state:
        st.session_state.reto_seleccionado = None
    if 'puntuaciones' not in st.session_state:
        st.session_state.puntuaciones = {}
    if 'ocultar_mensaje' not in st.session_state:
        st.session_state.ocultar_mensaje = False

# Inicializar el juego
inicializacion_juego()

# ConfiguraciÃ³n del juego inicial
if not st.session_state.juego_activo:
    st.markdown("<h1 style='text-align: center;'>Juego de Preguntas y Retos</h1>", unsafe_allow_html=True)

    st.header("ConfiguraciÃ³n de los jugadores")
    col1, col2 = st.columns(2)

    with col1:
        numero_jugadores = st.number_input("Â¿CuÃ¡ntos jugadores?", min_value=2, step=1, value=2)
        categoria = st.selectbox("Elige tu nivel:", list(PREGUNTAS.keys()))
        jugar = st.button("Iniciar Juego")

    with col2:
        jugadores = []
        for i in range(numero_jugadores):
            nombre_jugador = st.text_input(f"Nombre del jugador {i + 1}:", key=f"jugador_{i}")
            if nombre_jugador:
                jugadores.append(nombre_jugador)

    if len(jugadores) == numero_jugadores and jugar:
        st.session_state.jugadores = jugadores
        st.session_state.categoria = categoria
        st.session_state.juego_activo = True
        st.session_state.jugador_actual = random.choice(jugadores)
        st.session_state.puntuaciones = {jugador: 0 for jugador in jugadores}
        st.rerun()

# Ronda de Juego
else:
    st.markdown("<h1 style='text-align: center;'>Ronda de Juego</h1>", unsafe_allow_html=True)
    
    # Selector de categorÃ­a en cualquier momento
    nueva_categoria = st.selectbox(
        "Selecciona una categorÃ­a:", list(PREGUNTAS.keys()), 
        index=list(PREGUNTAS.keys()).index(st.session_state.categoria)
    )
    if nueva_categoria != st.session_state.categoria:
        st.session_state.categoria = nueva_categoria
        st.session_state.pregunta_seleccionada = None
        st.session_state.reto_seleccionado = None
        st.session_state.ocultar_mensaje = False
        st.success(f"CategorÃ­a cambiada a: {nueva_categoria}")
        st.rerun()

    jugador_actual = st.session_state.jugador_actual

    # Mostrar Pregunta/Reto si no estÃ¡ oculto
    if not st.session_state.ocultar_mensaje:
        if not st.session_state.pregunta_seleccionada and not st.session_state.reto_seleccionado:
            if random.choice([True, False]):
                st.session_state.pregunta_seleccionada = random.choice(PREGUNTAS[st.session_state.categoria])
            else:
                st.session_state.reto_seleccionado = random.choice(RETOS[st.session_state.categoria])

        if st.session_state.pregunta_seleccionada:
            st.markdown(f"<h2 style='text-align: center;'>{jugador_actual}, {st.session_state.pregunta_seleccionada}</h2>", unsafe_allow_html=True)
        elif st.session_state.reto_seleccionado:
            otro_jugador = random.choice([j for j in st.session_state.jugadores if j != jugador_actual])
            st.markdown(f"<h2 style='text-align: center;'>{jugador_actual}, {st.session_state.reto_seleccionado} a {otro_jugador}</h2>", unsafe_allow_html=True)

    # BotÃ³n para la siguiente ronda
    if st.button("Siguiente ronda"):
        st.session_state.jugadores_actuales = (st.session_state.jugadores_actuales + 1) % len(st.session_state.jugadores)
        st.session_state.jugador_actual = st.session_state.jugadores[st.session_state.jugadores_actuales]
        st.session_state.pregunta_seleccionada = None
        st.session_state.reto_seleccionado = None
        st.session_state.ocultar_mensaje = False
        st.rerun()

    # Mostrar puntuaciones actuales en dos columnas
    st.header("Puntuaciones")
    col1, col2 = st.columns(2)

    with col1:
        # Campos number_input para modificar puntos
        for jugador in st.session_state.jugadores:
            puntos = st.number_input(
                f"{jugador}:",
                min_value=-50,
                max_value=50,
                step=1,
                value=st.session_state.puntuaciones[jugador],
                key=f"puntos_{jugador}"
            )
            if puntos != st.session_state.puntuaciones[jugador]:
                st.session_state.puntuaciones[jugador] = puntos
                st.session_state.ocultar_mensaje = True
                st.rerun()

    with col2:
        # GrÃ¡fica de puntuaciones
        if st.session_state.puntuaciones:
            df_puntos = pd.DataFrame({
                "Jugador": list(st.session_state.puntuaciones.keys()),
                "PuntuaciÃ³n": list(st.session_state.puntuaciones.values())
            })
            
            # Crear grÃ¡fico de barras con Altair
            chart = alt.Chart(df_puntos).mark_bar().encode(
                y=alt.X("Jugador:N", title="Jugador", sort=None),
                x=alt.Y("PuntuaciÃ³n:Q", title="PuntuaciÃ³n"),
                color=alt.Color("Jugador:N", legend=None)
            ).properties(
                width=300,
                height=400
            )
            st.altair_chart(chart, use_container_width=True)

    # BotÃ³n para salir del juego
    if st.button("Salir del Juego"):
        st.session_state.juego_activo = False
        st.session_state.jugadores = []
        st.session_state.categoria = None
        st.session_state.puntuaciones = {}
        st.write("Gracias por jugar. Â¡Hasta la prÃ³xima!")
